<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>edp.davinci</groupId>
    <artifactId>davinci-parent_2.11</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>akcron</module>
        <module>server</module>
        <module>assembly</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <junit.version>4.12</junit.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <scala.library>2.11</scala.library>
        <scala.version>2.11.8</scala.version>
        <scalatest.version>2.2.5</scalatest.version>
        <akka.version>2.4.17</akka.version>
        <akka-http.version>10.0.5</akka-http.version>
        <slick.version>3.2.0</slick.version>
        <kafka.version>0.10.0.0</kafka.version>
        <hadoop.version>2.7.1</hadoop.version>
        <hbase.version>1.1.2</hbase.version>
        <hive.version>1.2.1</hive.version>
        <spark.version>2.0.2</spark.version>
        <tachyon.version>0.7.1</tachyon.version>
        <zookeeper.version>3.4.6</zookeeper.version>
        <jackson.version>2.6.5</jackson.version>
        <json4s.version>3.2.11</json4s.version>
        <slf4j.version>1.7.21</slf4j.version>
        <guava.version>19.0</guava.version>
        <edp-common.version>1.1.0-SNAPSHOT</edp-common.version>
        <edp-moonbox.version>1.0-SNAPSHOT</edp-moonbox.version>
    </properties>


    <distributionManagement>
        <repository>
            <id>ce-nexus</id>
            <url>http://10.100.31.71:8080/nexus/content/repositories/snapshots/</url>
        </repository>
    </distributionManagement>

    <!-- common repositories -->
    <repositories>
        <repository>
            <id>central</id>
            <!-- This should be at top, it makes maven try the central repo first and then others and hence faster dep resolution -->
            <name>Maven Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>ce.thirdparty</id>
            <url>http://10.100.31.71:8080/nexus/content/repositories/thirdparty/</url>
        </repository>
        <repository>
            <id>ce.snapshots</id>
            <url>http://10.100.31.71:8080/nexus/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>oracle</id>
            <url>http://code.lds.org/nexus/content/groups/main-repo/</url>
        </repository>

        <repository>
            <id>conjars.org</id>
            <url>http://conjars.org/repo/</url>
        </repository>
        <repository>
            <id>springrepo</id>
            <url>http://repo.spring.io/libs-release-remote/</url>
        </repository>

    </repositories>

    <!-- common pluginRepositories -->
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>sonatype-oss-public</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
        </pluginRepository>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.library}</artifactId>
            <version>${scalatest.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- ================= java ================= -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <!-- The scala-maven-plugin is used for compiling/testing/running/documenting scala code in maven -->
                <version>3.2.2</version>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <scalaCompatVersion>${scala.library}</scalaCompatVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>true</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                    <jvmArgs>
                        <!--<jvmArg>-Xss2m</jvmArg>-->
                        <jvmArg>-Xms512M</jvmArg>
                        <jvmArg>-Xmx2048M</jvmArg>
                        <jvmArg>-XX:MaxPermSize=2048M</jvmArg>
                        <jvmArg>-XX:+CMSClassUnloadingEnabled</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${java.version}</javacArg>
                        <javacArg>-Xlint:all,-serial,-path</javacArg>
                    </javacArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- The Compiler Plugin is used to compile the sources of your project -->
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerVersion>${java.version}</compilerVersion>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <optimize>true</optimize>
                    <maxmem>1024m</maxmem>
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-Xlint:all,-serial,-path</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- ========================================================== -->
            <!-- test and report -->
            <!-- ========================================================== -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an application -->
                <version>2.19.1</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <!-- The ScalaTest Maven plugin allows you to run ScalaTest tests through Maven -->
                <!-- To use the ScalaTest Maven plugin, you need to disable SureFire and enable ScalaTest -->
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>EDPTestSuite.txt</filereports>
                    <argLine>-Xms512M -Xmx2048M -XX:MaxPermSize=2048M -XX:+CMSClassUnloadingEnabled</argLine>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
